name: Tests

on: [push, pull_request]

jobs:
  stable-tests:
    name: Run tests on stable rust
    uses: ./.github/workflows/test.yml
    with:
      rust-version: stable

  msrv-tests:
    name: Run tests on the minimum supported rust version
    uses: ./.github/workflows/test.yml
    with:
      rust-version: 1.56.0

  python-tests:
    name: Python tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: |
          python -m pip install .
          python -m pip install pytest

      - name: Run local test Server
        run: |
          docker run -d -p 3735:3735 etesync/test-server:latest
          ./.github/scripts/wait-for-it.sh localhost:3735

      - run: |
          python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
          ln -s "../build/lib.linux-x86_64-${python_version}/etebase_python.cpython-${python_version}-x86_64-linux-gnu.so" etebase/
          pytest

  rust-formatting:
    name: Rust code formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  python-formatting:
    name: Python code formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: python -m pip install black
      - run: black --check etebase/

  clippy:
    name: Clippy lints
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings
